version: '3.9'

services:
   # Database Postgresql
   postgresql:
      build:
         context: .
         dockerfile: postgres/dockerfile.postgres
      labels:
         author: "Houston Santos - houston_santos@hotmail.com"
      container_name: postgres
      healthcheck:
         test: ["CMD", "pg_isready", "-U", "postgres"]
         interval: 5s
         retries: 5
      restart: on-failure
      environment:
         TZ: ${TIMEZONE}
         DB_ADM_USER: ${DB_ADM_USER}
         DB_ADM_PASS: ${DB_ADM_PASS}
         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
         POSTGRES_USER_TOTVS: ${POSTGRES_USER_TOTVS}
         POSTGRES_PASS_TOTVS: ${POSTGRES_PASS_TOTVS}
         POSTGRES_INITDB_ARGS: "--encoding=WIN1252 --locale=C --username=postgres"
      volumes:
         - postgres:/var/lib/postgresql/data
      ports:
         - 5432:5432
      networks:
         databases:
            ipv4_address: ${IP_POSTGRES}
   
   # Database MSSQL Server
   mssql:
      build:
         context: .
         dockerfile: mssql/dockerfile.mssql
      labels:
         author: "Houston Santos - houston_santos@hotmail.com"
      container_name: mssql
      #healthcheck:
         #test: ["CMD", "pg_isready", "-U", "postgres"]
         #interval: 5s
         #retries: 5
      environment:
         TZ: ${TIMEZONE}
         ACCEPT_EULA: ${ACCEPT_EULA}
         MSSQL_PID: ${MSSQL_PID}
         SA_PASSWORD: ${SA_PASSWORD}
         MSSQL_AGENT_ENABLED: true
      restart: on-failure
      volumes:
         - mssql:/var/opt/mssql
      ports:
         - 1433:1433
      networks:
         databases:
            ipv4_address: ${IP_MSSQL}

   # Database MySQL
   mysql:
      image: mysql
      labels:
         author: "Houston Santos - houston_santos@hotmail.com"
      container_name: mysql
      restart: always
      environment:
         TZ: ${TIMEZONE}
         MYSQL_USER: ${MYSQL_USER}
         MYSQL_PASSWORD: ${MYSQL_PASSWORD}
         MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      volumes:
         - mysql:/var/lib/mysql
      ports:
         - 3306:3306
      networks:
         databases:
            ipv4_address: ${IP_MYSQL}
   
   # SGDB para MySQL
   adminer:
      image: adminer:latest
      labels:
         author: "Houston Santos - houston_santos@hotmail.com"
      container_name: adminer
      depends_on:
         mysql:
            condition: service_started
      restart: always
      environment:
         TZ: ${TIMEZONE}
         ADMINER_DEFAULT_SERVER: ${ADMINER_DEFAULT_SERVER}
      ports:
         - 8081:8080
      networks:
         databases:
            ipv4_address: ${IP_ADMINER}

volumes:
   postgres:
      name: postgres
   mssql:
      name: mssql
   mysql:
      name: mysql

networks:
   databases:
      name: databases
      ipam:
         driver: default
         config:
            - subnet: ${SUBNET}
              gateway: ${GATEWAY}
